export const snapshot = {};

snapshot[`test 1`] = `
{
  a: 1,
  b: 2,
}
`;

snapshot[`test 2`] = `
TestClass {
  a: 1,
  b: 2,
}
`;

snapshot[`test 3`] = `
Map(3) {
  "Hello" => "World!",
  1 => 2,
  [Function (anonymous)] => "World!",
}
`;

snapshot[`test 4`] = `
Set(3) {
  1,
  2,
  3,
}
`;

snapshot[`test 5`] = `
{
  fn: [Function: fn],
}
`;

snapshot[`test 6`] = `[Function: fn]`;

snapshot[`test 7`] = `
[
  1,
  2,
  3,
]
`;

snapshot[`test 8`] = `"hello world"`;

snapshot[`test 9`] = `
{
  a: 1,
  b: 2,
}
`;

snapshot[`test > nested 1`] = `
TestClass {
  a: 1,
  b: 2,
}
`;

snapshot[`test > nested 2`] = `
Map(3) {
  "Hello" => "World!",
  1 => 2,
  [Function (anonymous)] => "World!",
}
`;

snapshot[`test > nested > double-nested 1`] = `
Set(3) {
  1,
  2,
  3,
}
`;

snapshot[`test > nested > double-nested 2`] = `
{
  fn: [Function: fn],
}
`;

snapshot[`test > nested > double-nested 3`] = `[Function: fn]`;

snapshot[`test > nested 3`] = `
[
  1,
  2,
  3,
]
`;

snapshot[`test 10`] = `"hello world"`;

snapshot[`test 11`] = `"\\\\ \` \${}"`;

snapshot[`test 12`] = `
"a
b	c"
`;

snapshot[`test > string 1`] = `
"
<html>
  <head>
    <title>Snapshot Test - Multi-Line Strings</title>
  </head>
  <body>
    <h1>
      Snapshot Test - Multi-Line Strings
    </h2>
    <p>
      This is a snapshot of a multi-line string.
    </p>
  </body>
</html>"
`;

snapshot[`test > string in array 1`] = `
[
  "
<h1>
  Header
</h1>",
  "
<p>
  Content
</p>",
]
`;

snapshot[`test > string in object 1`] = `
{
  str: "
        Line #1
        Line #2
        Line #3",
}
`;

snapshot[`test > object 1`] = `"Missing snapshot file."`;

snapshot[`test > string 2`] = `"Missing snapshot file."`;

snapshot[`custom name 1`] = `
[
  1,
  2,
  3,
]
`;

snapshot[`test > serializer 1`] = `
Array Length: 3

[
  1,
  2,
  3,
]
`;

snapshot[`test > msg > missing snapshot 1`] = `"[CUSTOM ERROR MESSAGE - MISSING SNAPSHOT]"`;

snapshot[`test > msg > missing snapshot file 1`] = `"[CUSTOM ERROR MESSAGE - MISSING SNAPSHOT]"`;

snapshot[`test 13`] = `
{
  content: "
      This is a really long line that will make sure that snapshot serializer doesn't truncate long strings.
      It needs to be long enough to trigger any potential truncation behavior.
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. 
      Duis mattis purus sit amet nulla lobortis, at semper metus eleifend.
      Etiam ornare turpis id mi tincidunt, non hendrerit justo facilisis.
    ",
  title: "Testing a page",
}
`;

snapshot[`test 14`] = `
{
  fmt: {
    files: {
      exclude: [],
      include: [
        "**/*.ts",
      ],
    },
    options: {
      indentSize: 4,
      proseWrap: "always",
    },
  },
}
`;

snapshot[`test 15`] = ``;

snapshot[`test > no options 1`] = `This green text has had its colors stripped`;

snapshot[`createAssertSnapshot() - options object 1`] = `This green text has had its colors stripped`;

snapshot[`createAssertSnapshot() - composite - custom Name 1`] = `"[32mThis green text has had its colors stripped[39m"`;

snapshot[`test 16`] = `"Mock test output for regression #5155"`;

snapshot[`test 17`] = `
"Hello\\r
World!\\r
"
`;
